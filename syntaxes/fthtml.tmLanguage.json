{"$schema":"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json","name":"fthtml","scopeName":"source.fthtml","patterns":[{"include":"#strings"},{"include":"#comments"},{"include":"#directives"},{"include":"#template"},{"include":"#keywords"},{"include":"#variables-ref"},{"include":"#embedded-langs"},{"include":"#entities"},{"include":"#entity-errors"}],"repository":{"template":{"patterns":[{"begin":"^[ \\t]*(template)\\s+","beginCaptures":{"1":{"name":"keyword.other.$1.fthtml"}},"end":"(?<=\\})","patterns":[{"begin":"\\{","beginCaptures":{"0":{"name":"punctuation.definition.tag.begin.fthtml"}},"end":"\\}","endCaptures":{"0":{"name":"punctuation.definition.tag.end.fthtml"}},"patterns":[{"include":"#strings"},{"match":"(?x)  (?:\n    (?:^|[ \\t]+?) #check if starts at new line or n spaces from new line\n    (import) #these keywords can be anywhere in syntax and must be followed by a string\n    | ^[\\s]*(comment|doctype|template) #not allowed here\n  ) \n  (?=\\s+(['\"]).*?\\3|(.*)) #end should be string for keywords, this checks both single and double quoted","captures":{"1":{"name":"keyword.other.$1.fthtml"},"2":{"name":"invalid.illegal.keyword.$2.fthtml"},"4":{"name":"invalid.illegal.keyword-value.fthtml"}}},{"begin":"^\\s*([\\w-]+)","beginCaptures":{"1":{"name":"variable.other.readwrite.fthtml"}},"end":"\\s+(['\"])[^\\1]*?\\1[ \\t]*$|(.*?)","endCaptures":{"2":{"name":"invalid.illegal.variable-value.fthtml"}}},{"name":"invalid.illegal.variable-value.fthtml","match":"([^'\"])"}]}]}]},"directives":{"patterns":[{"begin":"^[ \\t]*(#)[ \\t]*(vars)(?:$|(.*))","beginCaptures":{"0":{"name":"keyword.control.directive.fthtml"},"1":{"name":"punctuation.definition.preprocessor.fthtml"},"2":{"name":"meta.keyword.control.directive.$2.fthtml"},"3":{"name":"invalid.illegal.directive-end.fthtml"}},"end":"^[ \\t]*(#)[ \\t]*(end)(?:$|(.*))","endCaptures":{"0":{"name":"keyword.control.directive.fthtml"},"1":{"name":"punctuation.definition.preprocessor.fthtml"},"2":{"name":"meta.keyword.control.directive.end.fthtml"},"3":{"name":"invalid.illegal.directive-end.fthtml"}},"patterns":[{"include":"#strings"},{"begin":"^\\s*([\\w-]+)","beginCaptures":{"1":{"name":"variable.other.readwrite.fthtml"}},"end":"\\s+(['\"])[^\\1]*?\\1[ \\t]*$|(.*?)","endCaptures":{"2":{"name":"invalid.illegal.variable-value.fthtml"}}},{"name":"invalid.illegal.variable-value.fthtml","match":"([^'\"])"}]}]},"keywords":{"patterns":[{"match":"(?x)  (?:\n    (?:^|[ \\t]+?) #check if starts at new line or n spaces from new line\n    (comment|import) #these keywords can be anywhere in syntax and must be followed by a string\n    | ^[\\s]*(doctype) #doctype can NOT be anywhere but beginning of line\n  ) \n  (?=\\s+(['\"]).*?\\3|(.*)) #end should be string for keywords, this checks both single and double quoted","captures":{"1":{"name":"keyword.other.$1.fthtml"},"2":{"name":"keyword.other.$2.fthtml"},"3":{"name":"keyword.other.$3.fthtml"},"4":{"name":"invalid.illegal.keyword-value.fthtml"}}}]},"strings":{"name":"string.quoted.fthtml","patterns":[{"name":"string.quoted.double.fthtml","begin":"\"","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.fthtml"}},"end":"\"","endCaptures":{"1":{"name":"punctuation.definition.string.end.fthtml"},"2":{"name":"invalid.illegal.newline.fthtml"}},"patterns":[{"include":"#string-character-escape"},{"include":"#string-template-expression"}]},{"name":"string.quoted.single.fthtml","begin":"'","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.fthtml"}},"end":"'","endCaptures":{"1":{"name":"punctuation.definition.string.end.fthtml"},"2":{"name":"invalid.illegal.newline.fthtml"}},"patterns":[{"include":"#string-character-escape"},{"include":"#string-template-expression"}]}]},"string-character-escape":{"patterns":[{"name":"constant.character.escape.fthtml","match":"\\\\(?!\\$)(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"}]},"string-template-expression":{"patterns":[{"match":"(\\${)[ ]*(([@]?)[\\w-]+\\??)[ ]*(})","captures":{"0":{"name":"meta.template.expression.fthtml"},"1":{"name":"punctuation.definition.template-expression.begin.fthtml"},"2":{"name":"variable.other.fthtml"},"3":{"name":"punctuation.definition.variable.other.begin.fthtml"},"4":{"name":"punctuation.definition.template-expression.end.fthtml"}}}]},"comments":{"name":"comment.fthtml","patterns":[{"name":"comment.line.fthtml","begin":"(^[ \\t]+)?((//)(?:\\s*(?=\\s|$))?)","beginCaptures":{"3":{"name":"punctuation.definition.comment.line.begin.fthtml"}},"end":"(?=$|^)"},{"name":"comment.block.fthtml","begin":"(/\\*)(?:\\s*(?=\\s|(\\*/)))?","beginCaptures":{"1":{"name":"punctuation.definition.comment.block.begin.fthtml"}},"end":"\\*/","endCaptures":{"0":{"name":"punctuation.definition.comment.block.end.fthtml"}}}]},"variables-ref":{"patterns":[{"match":"(@)[\\w-]+","captures":{"0":{"name":"variable.other.fthtml"},"1":{"name":"punctuation.definition.variable.other.begin.fthtml"}}}]},"entities":{"patterns":[{"begin":"(?![\\w-]+\\s*)(?=\\([^\\)]*.*\\))","end":"(.*)","name":"invalid.illegal.identifier.fthtml"},{"include":"#entity-tag-attr"},{"name":"entity.name.tag.fthtml","match":"(?x)  (?:^|\\s)[\\w-]+    #generic start of new line or enforce a space from previous element followed by valid identiifer\n  (?=\\s[\\w-]+       #ensure it ends with a wspace after the identifier\n    |\\s*\\{          #or a optional wspace and tag opening punc\n    |\\s*(?:[\\/])    #or beginning of comment\n    |\\s(?:['\"\\+\\@]) #or any of the valid grammar symbols, preceeded by a single wspace\n    |\\s*$           #or end of line\n    |(.*)           #or invalidate else\n  )","captures":{"1":{"name":"invalid.illegal.identifier.fthtml"}}},{"name":"punctuation.definition.tag.begin.fthtml","match":"\\{"},{"name":"punctuation.definition.tag.end.fthtml","match":"\\}"},{"name":"punctuation.separator.plus.fthtml","match":"\\+"}]},"entity-tag-attr":{"patterns":[{"begin":"(?x)  (?:^|\\s) #start of string\n  ([\\w-]+)\\s* #valid identifier\n  (/\\*(?:\\s*(?=\\s|(?:\\*/)))?.*?\\*/)* #can have n block comments after the identifier\n  \\s*(\\() #begin with '(' open","beginCaptures":{"1":{"name":"entity.name.tag.fthtml"},"2":{"patterns":[{"include":"#comments"}]},"3":{"name":"punctuation.definition.entity.other.attribute-group.begin.fthtml"}},"end":"(?=(\\)))","endCaptures":{"1":{"name":"punctuation.definition.entity.other.attribute-group.end.fthtml"}},"patterns":[{"include":"#strings"},{"name":"entity.other.attribute-name.class.fthtml","begin":"\\B(\\.)(?=@?[\\w-]+|(.*))","beginCaptures":{"1":{"name":"punctuation.entity.other.attribute-name.class.begin.fthtml"},"2":{"name":"invalid.illegal.attribute.class.fthtml"}},"end":"(@?[\\w-]+)(?:\\s|(?=\\))|(.*))","endCaptures":{"1":{"patterns":[{"include":"#variables-ref"}]},"2":{"name":"invalid.illegal.attribute.class.fthtml"}}},{"name":"entity.other.attribute-name.id.fthtml","begin":"\\B(\\#)(?=@?[\\w-]+|(.*))","beginCaptures":{"1":{"name":"punctuation.entity.other.attribute-name.id.begin.fthtml"},"2":{"name":"invalid.illegal.attribute.id.fthtml"}},"end":"(@?[\\w-]+)(?:\\s|(?=\\))|(.*))","endCaptures":{"1":{"patterns":[{"include":"#variables-ref"}]},"2":{"name":"invalid.illegal.attribute.id.fthtml"}}},{"include":"#variables-ref"},{"begin":"([\\w-]+)\\s*(=)\\s*","beginCaptures":{"1":{"name":"entity.other.attribute-name.fthtml"},"2":{"name":"punctuation.separator.key-value.fthtml"}},"end":"\\s|(?=\\))","patterns":[{"include":"#strings"},{"include":"#variables-ref"},{"name":"string.unquoted.fthtml","match":"(?x) \\s*?([\\w-]+[\\w\\.-]*) #this makes sure that unquoted values are valid with many periods (ex: www.example.com) ([^\\s\\)]*) #followed by anything that doesn't terminate the attribute group because we do it in parent regex end","captures":{"2":{"name":"invalid.illegal.attribute.value.fthtml"}}},{"name":"invalid.illegal.attribute.value.fthtml","match":"\\s*?(?!\\))([\\W].*)"}]},{"name":"entity.other.attribute-name.fthtml","match":"(?:[\\w-]+)"},{"name":"invalid.illegal.attribute.fthtml","match":"(?:[\\W])"}]}]},"entity-errors":{"patterns":[{"name":"invalid.illegal.identiifer.fthtml","match":"([^\\@\\#\\.\\+\\(\\)\\{\\}\\=])"}]},"entity-parenthesis":{"patterns":[{"begin":"\\{","end":"\\}","patterns":[{"include":"#entity-parenthesis"}]}]},"embedded-langs":{"patterns":[{"begin":"(?:^|\\s)(js)\\s+","beginCaptures":{"1":{"name":"entity.name.tag.fthtml"}},"end":"(?<=\\})","patterns":[{"begin":"\\{","beginCaptures":{"0":{"name":"punctuation.definition.tag.begin.fthtml"}},"end":"\\}","endCaptures":{"0":{"name":"punctuation.definition.tag.end.fthtml"}},"contentName":"meta.embedded.block.js","patterns":[{"include":"source.js"},{"include":"#entity-parenthesis"}]}]},{"begin":"(?:^|\\s)(css)\\s+","beginCaptures":{"1":{"name":"entity.name.tag.fthtml"}},"end":"(?<=\\})","patterns":[{"begin":"\\{","beginCaptures":{"0":{"name":"punctuation.definition.tag.begin.fthtml"}},"end":"\\}","endCaptures":{"0":{"name":"punctuation.definition.tag.end.fthtml"}},"contentName":"meta.embedded.block.css","patterns":[{"include":"source.css"},{"include":"#entity-parenthesis"}]}]},{"begin":"(?:^|\\s)(php)\\s+","beginCaptures":{"1":{"name":"entity.name.tag.fthtml"}},"end":"(?<=\\})","patterns":[{"begin":"\\{","beginCaptures":{"0":{"name":"punctuation.definition.tag.begin.fthtml"}},"end":"\\}","endCaptures":{"0":{"name":"punctuation.definition.tag.end.fthtml"}},"contentName":"meta.embedded.block.php","patterns":[{"include":"source.php"},{"include":"#entity-parenthesis"}]}]}]}}}
